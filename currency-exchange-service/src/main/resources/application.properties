spring.application.name=currency-exchange
server.port=8000

spring.config.import=optional:configserver:

# DB Configs
spring.jpa.show-sql=true
# By default, data.sql scripts get executed before the Hibernate is initialized. We need Hibernate to create our tables before inserting the data into them. To achieve this, we need to defer the initialization of our data source. We?ll use the below property to achieve this:
spring.jpa.defer-datasource-initialization=true

# Customize the H2 DB URL and use localhost:8000/h2-console/ for DB contents
spring.datasource.url=jdbc:h2:mem:testdb
spring.h2.console.enabled=true

# configure the naming server url
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

# Add no of circuit breaker retries in case of failure of a rest controller
resilience4j.retry.instances.sample-api.maxAttempts=5
# Interval between retries
resilience4j.retry.instances.sample-api.waitDuration=1s
# Each subsequent request would wait for a little longer
resilience4j.retry.instances.sample-api.enableExponentialBackoff=true

# Switch to Open state Circuit breaker if the failed request is 90%
#resilience4j.circuitbreaker.instances.default.failureRateThreshold=90
# Limit the no of API calls in a given time second, e.g. 2 request in every 10s
resilience4j.ratelimiter.instances.default.limitForPeriod=2
resilience4j.ratelimiter.instances.default.limitRefreshPeriod=10s

# No of concurrent calls allowed
# resilience4j.bulkhead.instances.default.maxConcurrentCalls=10
resilience4j.bulkhead.instances.sample-api.maxConcurrentCalls=10